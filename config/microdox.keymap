/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// layer mappings:
#define NAV_LYR 1
#define SYM_LYR 2
#define MAC_LYR 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                // -----------------------------------------------------------------------------------------
                // |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  |
                // |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |
                // |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  /  |
                //             | TAB | ESC | SPC |   |BSPC | ENT | DEL |
                //             |CTRL | SYM | SPC |   |SHFT | NAV | MAC |
                                        bindings = <
                &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI
                &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O
                &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH
                        &lt SYM_LYR TAB &lt NAV_LYR ESC &kp SPACE         &mt LSHFT BSPC &lt NAV_LYR RETURN &lt MAC_LYR DEL
                        >;
                };


                nav_layer {
                // -----------------------------------------------------------------------------------------
                // | TAB |     |     |     |     |   |     |BSPC | DEL |     |     |
                // |CTRL |SHFT | WIN | ALT |     |   |CAPS | LFT | DWN | UP  | RGT |
                // |UNDO | CUT | CPY |PSTE |REDO |   | INS |HOME |PGDN |PGUP | END |
                //                   |     |     |     |   |     |     |     |
                bindings = <
                &kp TAB &trans &trans &trans &trans                             &trans &kp BSPC &kp DEL &trans &trans
                &sk LCTRL &sk LSHFT &sk LWIN &sk LALT &trans                    &kp CAPS &kp LEFT &kp DOWN &kp UP &kp RIGHT
                &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(LS(Z))           &trans &kp HOME &kp PG_DN &kp PG_UP &kp END
                        &trans &trans &trans            &trans &trans &trans
                        >;
                };


                symbol_layer {
                // -----------------------------------------------------------------------------------------
                // | `~  | 7&  | 8*  | 9(  | 0)  |   |     |  (  |  )  |  -  | =+  |
                // | [{  | 4$  | 5%  | 6^  | ]}  |   |     |  [  |  ]  | ;:  | '"  |
                // | 0)  | 1!  | 2#  | 3#  |     |   |     |  {  |  }  |     | \|  |
                //                   |     |     |     |   |SHFT |     |     |
                bindings = <
                &kp GRAVE &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0          &trans &kp LPAR &kp RPAR &kp MINUS &kp EQUAL
                &kp LBKT &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp RBKT               &trans &kp LBKT &kp RBKT &kp SEMI &kp APOS
                &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &trans             &trans &kp LBRC &kp RBRC &trans &kp BSLH
                        &trans &trans &trans                 &kp LSHFT &trans &trans
                        >;
                };


                macro_layer {
                // -----------------------------------------------------------------------------------------
                // | AF4 |     |     |RGBHD|RGBHI|   | F7  | F8  | F9  | F12 |RGBTG|
                // |     |     |     |RGBBD|RGBBI|   | F4  | F5  | F6  | F11 |BTCLR|
                // |     | CUT | CPY |PSTE |PSTE |   | F1  | F2  | F3  | F10 |OUTTG|
                //                   |     | DEL |     |   |     |     |     |
                bindings = <
                &kp LA(F4) &trans &trans &rgb_ug RGB_HUD &rgb_ug RGB_HUI                 &kp F7 &kp F8 &kp F9 &kp F12 &rgb_ug RGB_TOG
                &trans &trans &trans &rgb_ug RGB_BRD &rgb_ug RGB_BRI                     &kp F4 &kp F5 &kp F6 &kp F11 &bt BT_CLR
                &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &rgb_ug RGB_EFF                  &kp F1 &kp F2 &kp F3 &kp F10 &out OUT_TOG
                        &trans &trans &kp DEL                                    &trans &trans &trans
                        >;
                };


        };
};